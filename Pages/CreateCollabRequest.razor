<!---Inspired by Rasmus Lystrøm @https://github.com/ondfisk/BDSA2021 -->
@page "/createrequest"
@attribute [Authorize]
@inject HttpClient Http


<PageTitle>Create a request for collaboration</PageTitle>
<h1>Register your idea for a project!</h1>
<p>You register a new idea by filling out the input form below</p>


<EditForm Model="@request" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group">
        <label for="Application">Application</label>
        <InputTextArea id="Application" @bind-Value="request.Application" class="form-control" />
    </div>
    <!-- <div class="form-group">
        <label for="AmountOfCollaborators">Amount of collaborators</label>
        <InputNumber id="Description" @bind-Value="request.AmountOfCollaborators" class="form-control" />
    </div> EN CREATEDTO TAGER PT. IKKE ET AMOUNT OF COLLABS-->
    <div class="form-group">
        <br />
        <button type="submit" class="btn btn-success" @onclick="Create">Create</button>
        <button type="reset" class="btn btn-secondary">Reset</button>
        <button type="button" class="btn btn-primary" @onclick="Cancel">Cancel</button>
    </div>

</EditForm>





@code {
    //vi bliver nødt til at kunne hente en liste af alle supervisors
    //og vise til brugeren, så de kan vælge. -> metode i user repository + controller
    //--
    //StudentId skal autoudfyldes baseret på aktuel bruger
    //--
    //ideaid -> kan automatisk sendes med når man trykker på "request collab" knap
    //--
    //CreateDTO skal laves om til at tage et antal collaborators + der skal laves et tjek for 
    //om det stemmer overens med ideens antal collabor's

    private CollaborationRequestCreateDTO request = new(); 
    private DateTime end;

    protected override async Task OnInitializedAsync()
    {

    }

    private async Task HandleValidSubmit()
    {
        Console.WriteLine("Success");
        //denne "udregning" skal fixes, pt. fucker den pga. noget nullable
        //idea.TimeToComplete = end-idea.StartDate;     
    }

    private void Cancel()
    {
        Console.WriteLine("Cancelled");
    }

    private async void Create()
    {
        //not done... 
        Console.WriteLine("Create has been called");        
    }
}